{
	"info": {
		"_postman_id": "bd805e45-23cd-4805-bb36-a84705240a99",
		"name": "POC soft delete API test v3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": " get all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of 3 products\", () => \r",
							"  pm.expect(pm.response.json().length).to.equal(3));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete product",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/product/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"product",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all products 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of 2 products\", () => \r",
							"  pm.expect(pm.response.json().length).to.equal(2));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "create product",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"iPhone 12 Pro\",\r\n    \"fromInstant\": \"2019-09-17T16:47:52.690Z\",\r\n    \"toInstant\": \"2024-09-13T16:47:52.690Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/product",
					"host": [
						"{{host}}"
					],
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "update product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Id checked to make sure the object is updated and not inserted\", () => \r",
							"  pm.expect(pm.response.json().id).to.equal(6));\r",
							"pm.test(\"Last product inserted is updated from 'iPhone 12 Pro' to 'iPhone 13 Pro'\", () => \r",
							"  pm.expect(pm.response.json().name).to.equal(\"iPhone 13 Pro\"));\r",
							"\r",
							"\r",
							"  \r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"6\",\r\n    \"name\": \"iPhone 13 Pro\",\r\n    \"fromInstant\": \"2019-09-17T16:47:52.690Z\",\r\n    \"toInstant\": \"2022-09-13T16:47:52.690Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/product",
					"host": [
						"{{host}}"
					],
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all products 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of 3 products\", () => \r",
							"  pm.expect(pm.response.json().length).to.equal(3));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/products",
					"host": [
						"{{host}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all product-flags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of 4 products\", () => \r",
							"  pm.expect(pm.response.json().length).to.equal(4));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/product-flags",
					"host": [
						"{{host}}"
					],
					"path": [
						"product-flags"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete product-flag",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/product-flag/5",
					"host": [
						"{{host}}"
					],
					"path": [
						"product-flag",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all product-flags 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of 4 products\", () => \r",
							"  pm.expect(pm.response.json().length).to.equal(3));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/product-flags",
					"host": [
						"{{host}}"
					],
					"path": [
						"product-flags"
					]
				}
			},
			"response": []
		},
		{
			"name": "create product-flag",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"iPhone 13 Pro\",\r\n    \"state\": \"ACTIVE\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/product-flag",
					"host": [
						"{{host}}"
					],
					"path": [
						"product-flag"
					]
				}
			},
			"response": []
		},
		{
			"name": "update product-flag",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Id checked to make sure the object is updated and not inserted\", () => \r",
							"  pm.expect(pm.response.json().id).to.equal(6));\r",
							"pm.test(\"Last product inserted is updated from 'iPhone 13 Pro' to 'iPhone 13 Pro'\", () => \r",
							"  pm.expect(pm.response.json().name).to.equal(\"iPhone 13R Pro\"));\r",
							"\r",
							"\r",
							"  \r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"6\",\r\n    \"name\": \"iPhone 13R Pro\",\r\n    \"state\": \"ACTIVE\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/product-flag",
					"host": [
						"{{host}}"
					],
					"path": [
						"product-flag"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all product-flags 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List of 4 products\", () => \r",
							"  pm.expect(pm.response.json().length).to.equal(4));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/product-flags",
					"host": [
						"{{host}}"
					],
					"path": [
						"product-flags"
					]
				}
			},
			"response": []
		}
	]
}